name: build and deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: make build-image
      
      - name: Push Image
        run: make build-image-push
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
    
  test:
    needs: 
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: make build-image-pull
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
      
      - name: Start Docker containers
        run: make up

      - name: Test Migrations
        run: make build-image-migrate
        env:
          GOOSE_DRIVER: postgres
          GOOSE_DBSTRING: postgresql://postgres:password@localhost:5432/postgres?sslmode=disable

      - name: Stop Docker containers
        if: always()
        run: make down

  deploy:
    needs:
      - test
    runs-on: ubuntu-latest
    concurrency: 
      cancel-in-progress: false
      group: deploy-lock
    # if: github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      DOCKERIZE_URL: ${{ secrets.GOOSE_DBSTRING }}
      GOOSE_DBSTRING: ${{ secrets.GOOSE_DBSTRING }}
      GOOSE_DRIVER: ${{ vars.GOOSE_DRIVER}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: make build-image-pull

      - name: Database Migrations
        run: make build-image-migrate

      - name: Push Image
        run: make build-image-promote